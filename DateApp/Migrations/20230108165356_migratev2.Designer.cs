// <auto-generated />
using System;
using App.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230108165356_migratev2")]
    partial class migratev2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Api.Entities.UserLike", b =>
                {
                    b.Property<int>("IdLike")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLike"), 1L, 1);

                    b.Property<string>("ByUserLikedIdUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToUserLikedIdUser")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdLike");

                    b.HasIndex("ByUserLikedIdUser");

                    b.HasIndex("ToUserLikedIdUser");

                    b.ToTable("UserLike");
                });

            modelBuilder.Entity("Api.Entities.UserMessage", b =>
                {
                    b.Property<int>("IdMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMessage"), 1L, 1);

                    b.Property<string>("ByUserMessageIdUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToUserMessageIdUser")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdMessage");

                    b.HasIndex("ByUserMessageIdUser");

                    b.HasIndex("ToUserMessageIdUser");

                    b.ToTable("UserMessages");
                });

            modelBuilder.Entity("Api.Entities.UserProfile", b =>
                {
                    b.Property<string>("IdUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Api.Entities.UserLike", b =>
                {
                    b.HasOne("Api.Entities.UserProfile", "ByUserLiked")
                        .WithMany("SendedLikes")
                        .HasForeignKey("ByUserLikedIdUser");

                    b.HasOne("Api.Entities.UserProfile", "ToUserLiked")
                        .WithMany("ReceivedLikes")
                        .HasForeignKey("ToUserLikedIdUser");

                    b.Navigation("ByUserLiked");

                    b.Navigation("ToUserLiked");
                });

            modelBuilder.Entity("Api.Entities.UserMessage", b =>
                {
                    b.HasOne("Api.Entities.UserProfile", "ByUserMessage")
                        .WithMany("SendedMessages")
                        .HasForeignKey("ByUserMessageIdUser")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Api.Entities.UserProfile", "ToUserMessage")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ToUserMessageIdUser")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ByUserMessage");

                    b.Navigation("ToUserMessage");
                });

            modelBuilder.Entity("Api.Entities.UserProfile", b =>
                {
                    b.Navigation("ReceivedLikes");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SendedLikes");

                    b.Navigation("SendedMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
